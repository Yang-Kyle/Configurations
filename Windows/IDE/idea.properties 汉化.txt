# 使用 ${idea.home.path} 宏来指定相对于 IDE 安装目录的位置。
# 使用 ${xxx}，其中 xxx 是任何 Java 属性（包括在此文件的前几行中定义的属性）来引用其值。
# 对于 Windows 用户：请确保使用正斜杠（forward slashes）：C:/dir1/dir2。

#---------------------------------------------------------------------
# 如果你想自定义设置目录的路径，请取消注释此选项。
#---------------------------------------------------------------------
# idea.config.path=${user.home}/.IntelliJIdea/config

#---------------------------------------------------------------------
# 如果你想自定义缓存目录的路径，请取消注释此选项。
#---------------------------------------------------------------------
# idea.system.path=${user.home}/.IntelliJIdea/system

#---------------------------------------------------------------------
# 如果你想自定义用户安装的插件目录的路径，请取消注释此选项。
#---------------------------------------------------------------------
# idea.plugins.path=${idea.config.path}/plugins

#---------------------------------------------------------------------
# 如果你想自定义日志目录的路径，请取消注释此选项。
#---------------------------------------------------------------------
# idea.log.path=${idea.system.path}/log

#---------------------------------------------------------------------
# IDE应该为其提供代码辅助的最大文件大小（以KiB为单位）。
# 文件越大，其编辑器的工作速度越慢，整体系统内存要求越高，
# 如果启用代码辅助。如果需要任何大小的文件的代码辅助，请删除此属性或设置为非常大的数字。
#---------------------------------------------------------------------
idea.max.intellisense.filesize=2500

#---------------------------------------------------------------------
# IDE能够打开的最大文件大小（以KiB为单位）。
#---------------------------------------------------------------------
idea.max.content.load.filesize=20000

#---------------------------------------------------------------------
# 此选项控制控制台循环缓冲区：保持控制台输出大小不高于指定的缓冲区大小（以KiB为单位）。
# 较旧的行将被删除。为了禁用循环缓冲，请使用 idea.cycle.buffer.size=disabled
#---------------------------------------------------------------------
idea.cycle.buffer.size=1024

#---------------------------------------------------------------------
# 配置是否在IDE内部运行进程时使用特殊启动器。
# 使用启动器启用“软退出”和“线程转储”功能。
#---------------------------------------------------------------------
idea.no.launcher=false

#---------------------------------------------------------------------
# 为了避免过长的类路径
#---------------------------------------------------------------------
idea.dynamic.classpath=false

#---------------------------------------------------------------------
# idea.popup.weight属性有两个可能的值："heavy"和"medium"。
# 如果你的窗口管理器配置为“焦点跟随鼠标且自动提升”，
# 那么你必须将此属性设置为“medium”。
# 它可以防止在某些配置上弹出菜单的问题。
#---------------------------------------------------------------------
idea.popup.weight=heavy

#---------------------------------------------------------------------
# 移除此属性可能导致Windows下的编辑器性能下降。
#---------------------------------------------------------------------
sun.java2d.d3d=false

#---------------------------------------------------------------------
# 移除此属性可能导致Java 8+上的编辑器性能下降。
#---------------------------------------------------------------------
swing.bufferPerWindow=true

#---------------------------------------------------------------------
# 移除此属性可能导致X Window下的编辑器性能下降。
#---------------------------------------------------------------------
sun.java2d.pmoffscreen=false

#---------------------------------------------------------------------
# 在JBR中启用HiDPI支持。
#---------------------------------------------------------------------
sun.java2d.uiScale.enabled=true

#---------------------------------------------------------------------
# 适用于显示HTML的Swing文本组件（除了JEditorPane）。
# 根据组件的字体大小重新定位CSS大小映射，
# 以便相对字体大小值（smaller、larger）能够正确缩放。
# 仅适用于JBR。
#---------------------------------------------------------------------
javax.swing.rebaseCssSizeMap=true

#---------------------------------------------------------------------
# 解决在macOS上访问（从可访问性的角度）长VCS日志的问题。仅适用于JBR。
#---------------------------------------------------------------------
sun.awt.mac.a11y.tableAccessibleRowCountThreshold=1000

#---------------------------------------------------------------------
# 启用一种优化，排除从可访问树中遍历折叠的可访问节点。JBR-4167
#---------------------------------------------------------------------
javax.swing.JTree.excludeAccessibleChildrenFromClosedNodes=true

#---------------------------------------------------------------------
# 避免在Mac OS X下访问剪贴板时长时间挂起的解决方案。
#---------------------------------------------------------------------
#ide.mac.useNativeClipboard=True

#---------------------------------------------------------------------
# IDE将用于显示历史文件内容的最大大小（以KiB为单位）-
# 在Show Diff或计算Digest Diff时。
#---------------------------------------------------------------------
#idea.max.vcs.loaded.size.kb=20480

#---------------------------------------------------------------------
# IDEA文件选择器查看目录以检测其是否包含有效项目的方式
# （使用相应的图标标记这些目录）。
# 取消注释该选项可以防止在用户主目录之外执行此操作。
#---------------------------------------------------------------------
#idea.chooser.lookup.for.project.dirs=false

#---------------------------------------------------------------------
# 在LWCToolkit.invokeAndWait()中监听EDT状态，并在EDT变为空闲时丢弃调用事件
# 但尚未分派（被认为已丢失）。这可以防止死锁并使调用返回一些默认结果。
#---------------------------------------------------------------------
sun.lwawt.macosx.LWCToolkit.invokeAndWait.disposeOnEDTFree=true

#---------------------------------------------------------------------
# 实验性选项，执行一些操作使真正平滑的滚动成为可能：
#
# * 启用硬件加速滚动。
#     Blit加速尽可能多地复制渲染区域，然后仅重新绘制新暴露的区域。
#     这有助于改善滚动性能并减少CPU使用率（特别是如果绘制计算密集）。
#
# * 启用“真正的双缓冲”。
#     为了消除Blit加速滚动时的撕裂并在EDT被阻塞时恢复帧缓冲区内容。
#
# * 添加"idea.true.smooth.scrolling.debug"选项。
#     检查是否可以进行Blit加速滚动，如果可以，检查是否可以使用真正的双缓冲。
#
# * 启用高精度鼠标滚轮事件处理。
#     尽管Java 7引入了MouseWheelEven.getPreciseWheelRotation()方法，
#     但JScrollPane到目前为止还没有使用它。
#     取决于编辑器/常规/平滑滚动设置、远程桌面检测和省电模式状态。
#     理想情况下，我们需要修补运行时（在Windows、Linux和macOS上）来改进对细粒度输入数据的处理。
#     通过"idea.true.smooth.scrolling.high.precision"选项可以切换此功能。
#
# * 启用像素完美滚动事件处理。
#     当前，此模式仅在具有JetBrains Runtime的macOS下可用。
#     通过"idea.true.smooth.scrolling.pixel.perfect"选项可以切换此功能。
#
# * 启用滚动输入的插值（滚动条、鼠标滚轮、触摸板、键等）。
#     平滑输入，缺乏空间和时间分辨率，异步执行渲染。
#     取决于编辑器/常规/平滑滚动设置、远程桌面检测和省电模式状态。
#     该功能可以使用以下选项进行调整：
#       "idea.true.smooth.scrolling.interpolation" - 主开关
#       "idea.true.smooth.scrolling.interpolation.scrollbar" - 滚动条插值
#       "idea.true.smooth.scrolling.interpolation.scrollbar.delay" - 滚动条插值的初始延迟（毫秒）
#       "idea.true.smooth.scrolling.interpolation.mouse.wheel" - 鼠标滚轮/触摸板插值
#       "idea.true.smooth.scrolling.interpolation.mouse.wheel.delay.min" - 鼠标滚轮插值的最小初始延迟（毫秒）
#       "idea.true.smooth.scrolling.interpolation.mouse.wheel.delay.max" - 鼠标滚轮插值的最大初始延迟（毫秒）
#       "idea.true.smooth.scrolling.interpolation.precision.touchpad" - 触摸板插值
#       "idea.true.smooth.scrolling.interpolation.precision.touchpad.delay" - 触摸板插值的初始延迟（毫秒）
#       "idea.true.smooth.scrolling.interpolation.other" - 其他输入源的插值
#       "idea.true.smooth.scrolling.interpolation.other.delay" - 其他输入源插值的初始延迟（毫秒）
#
# * 在编辑器中添加按需的水平滚动条。
#     仅在当前可见内容实际上需要时才显示水平滚动条。
#     这有助于节省编辑器空间，并防止在垂直触摸板滚动时出现偶发的水平“抖动”。
#     通过"idea.true.smooth.scrolling.dynamic.scrollbars"选项可以切换此功能。
#---------------------------------------------------------------------
#idea.true.smooth.scrolling=true

#---------------------------------------------------------------------
# 用于以调试模式启动JVM的VM选项值。
# 一些JREs以不同的方式定义它（在Oracle VM中为-XXdebug）
#---------------------------------------------------------------------
idea.xdebug.key=-Xdebug

#-----------------------------------------------------------------------
# 如果你想即时接收有关发生在IDE或安装的插件上的致命错误的视觉通知，
# 请更改为 'enabled'。
#-----------------------------------------------------------------------
idea.fatal.error.notification=disabled
