框架时间计算点
一个典型的游戏渲染周期包括以下几个阶段。

[A_1]渲染_CPU[B_1]显示_frame[C_1]
[A_2]渲染_CPU[B_2]显示_frame[C_2]
...
[A_n]渲染_CPU[B_n]显示_frame[C_n]

点A_n定义了每个新帧开始的时间点，通常在那个时候输入设备的状态被轮询，CPU开始渲染一个新的帧，模拟相对于该时间戳的3D世界的状态。
B_n点定义了CPU完成新帧的渲染并通过3D API调用其显示功能的时间点。3D API捕获3D命令缓冲区的内容，并将其置于帧显示队列中，GP从此时开始异步处理。 
C_n点定义了3D API完成帧显示调用并将控制权返回给渲染循环的时间点。C_n点与下一帧的A_n+1点有效重合，也就是说，渲染循环在同一时间点开始准备下一帧。

游戏中的频率和时间计数器传统上将帧时间指定为下两帧的时间戳A_n和An-1之间的差异。默认情况下，%PRODUCTNAME%也使用这些时间戳来计算帧时间。
然而，一些基准测试软件并不在游戏调用捕捉层面上工作，无法获得这种游戏中的时序。它可能只依赖DXGI的帧速率统计，所以它对 "帧时间 "的定义有点不同，并将其计算为Bn和Bn-1之间的差异。
以这种方式计算的帧时间不会与游戏中的计数器和%PRODUCTNAME%计算的帧时间完全一致，因为其计算性质不同，而且由于其他时间戳的抽样。
如果需要的话，你可以使用这个选项来切换到这样一个备用的框架时间计算模型。

工具提示。
- 工具提示可以在程序的高级属性中的<界面>选项卡中被禁用。
